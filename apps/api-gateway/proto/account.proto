syntax = "proto3";

package account;

service AccountService {
    rpc GetAccount (GetAccountRequest) returns (GetAccountResponse);
    rpc Register (RegisterRequest) returns (RegisterResponse);
    rpc Login (LoginRequest) returns (LoginResponse);
    rpc ValidateJwt (ValidateJwtRequest) returns (ValidateJwtResponse);
    rpc ValidateRefreshJwt (ValidateRefreshJwtRequest) returns (ValidateRefreshJwtResponse);
    rpc RefreshToken (RefreshTokenRequest) returns (RefreshTokenResponse);
    rpc Logout (LogoutRequest) returns (LogoutResponse);
    rpc CreateResetPasswordToken (CreateResetPasswordTokenRequest) returns (CreateResetPasswordTokenResponse);
    rpc ChangePassword (ChangePasswordRequest) returns (ChangePasswordResponse);
    rpc ChangeUsername (ChangeUsernameRequest) returns (ChangeUsernameResponse);
    rpc ChangeEmail (ChangeEmailRequest) returns (ChangeEmailResponse);
}

message Tokens {
    string accessToken = 1;
    string refreshToken = 2;
}

message Account {
    string uuid = 1;
    string email = 2;
    string username = 3;
}

message GetAccountRequest {
    string accountId = 1;
}

message GetAccountResponse {
    int32 status = 1;
    repeated string error = 2;
    Account data = 3;
}

// Register
message RegisterRequest {
    string email = 1;
    string username = 2;
    string password = 3;
    string confirmPassword = 4;
}

message ChangeUsernameRequest {
    string username = 1;
    string uuid = 2;
}

message ChangeUsernameResponse {
    int32 status = 1;
    string username = 2;
    repeated string error = 3;
}

message ChangeEmailRequest {
    string email = 1;
    string uuid = 2;
}

message ChangeEmailResponse {
    int32 status = 1;
    string email = 2;
    repeated string error = 3;
}

message ConfirmNewEmailRequest {
    string token = 1;
}

message ConfirmNewEmailResponse {
    int32 status = 1;
    repeated string error = 2;
}

message CreateResetPasswordTokenRequest {
    string email = 1;
}

message CreateResetPasswordTokenResponse {
    int32 status = 1;
    optional string token = 2;
    repeated string error = 3;
    optional string username = 4;
    optional string email = 5;
}

message ChangePasswordRequest {
    string token = 1;
    string password = 2;
    string repeatedPassword = 3;
}

message ChangePasswordResponse {
    int32 status = 1;
    repeated string error = 2;
    optional string username = 3;
    optional string email = 4;
}

message RegisterResponse {
    int32 status = 1;
    repeated string error = 2;
    optional string email = 3;
    optional string username = 4;
}
  
// Login
message LoginRequest {
    string email = 1;
    string password = 2;
}
  
message LoginResponse {
    int32 status = 1;
    repeated string error = 2;
    Tokens data = 3;
}
  
// Validate Access JWT
message ValidateJwtRequest {
    string accessToken = 1;
}
  
message ValidateJwtResponse {
    message ValidateJwtData {
        bool isValid = 1;
        string accountId = 2;
    } 

    int32 status = 1;
    repeated string error = 2;
    ValidateJwtData data = 3;
}

// Validate Refresh JWT
message ValidateRefreshJwtRequest {
    string refreshToken = 1;
}
  
message ValidateRefreshJwtResponse {
    message ValidateRefreshJwtData {
        bool isValid = 1;
        string accountId = 2;
    } 

    int32 status = 1;
    repeated string error = 2;
    ValidateRefreshJwtData data = 3;
}

// RefreshToken
message RefreshTokenRequest {
    string accountId = 1;
    string refreshToken = 2;
}

message RefreshTokenResponse {
    int32 status = 1;
    repeated string error = 2;
    Tokens data = 3;
}

// Logout
message LogoutRequest {
    string accountId = 1;
}

message LogoutResponse {
    int32 status = 1;
    repeated string error = 2;
}
