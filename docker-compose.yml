version: '3.8'

networks:
  internal_services:
  accounts:
  api_gateway:

services:
  accounts-mongodb:
    container_name: trashify-accounts-mongodb
    image: mongo:latest
    environment:
      MONGO_INITDB_DATABASE: ${MONGODB_ACCOUNTS_DATABASE}
    volumes:
      - trashify-accounts-mongodb:/data/db
    command: mongod --port ${MONGODB_ACCOUNTS_PORT}
    restart: unless-stopped
    networks:
      - accounts
    ports:
      - ${MONGODB_ACCOUNTS_PORT}:${MONGODB_ACCOUNTS_PORT}
    expose:
      - ${MONGODB_ACCOUNTS_PORT}

  accounts-service:
    container_name: trashify-accounts-service
    build:
      context: .
      dockerfile: ./apps/accounts-service/Dockerfile
      target: development
    volumes:
      - ./:/app
      - /app/node_modules
    env_file: .env
    depends_on:
      - accounts-mongodb
    restart: unless-stopped
    networks:
      - internal_services
      - accounts

  api-gateway-cache:
    container_name: trashify-api-gateway-cache
    image: redis:latest
    ports:
      - ${API_GATEWAY_REDIS_CACHE_PORT:-6379}:${API_GATEWAY_REDIS_CACHE_PORT:-6379}
    command: redis-server --save 20 1 --loglevel warning --requirepass ${API_GATEWAY_REDIS_CACHE_PASSWORD:-3HOiHBc6CQiTN0c}
    restart: unless-stopped
    volumes:
      - api-gateway-cache:/data
      - api-gateway-cache-conf:/usr/local/etc/redis/redis.conf
    networks:
      - api_gateway

  api-gateway:
    container_name: trashify-api-gateway
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
      target: development
    volumes:
      - ./:/app
      - /app/node_modules
    env_file: .env
    ports:
      - ${PORT:-50000}:${PORT:-50000}
      - ${API_GATEWAY_DEBUGGER_PORT:-9229}:${API_GATEWAY_DEBUGGER_PORT:-9229}
    restart: unless-stopped
    networks:
      - api_gateway
      - internal_services
      - accounts

volumes:
  trashify-accounts-mongodb:
  api-gateway-cache:
  api-gateway-cache-conf:
